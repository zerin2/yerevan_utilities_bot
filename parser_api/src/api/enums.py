from enum import Enum


class EndpointSummary(str, Enum):
    START_TASK = 'Запуск новой задачи для парсера'
    RESULT = 'Получить результат парсинга'


class EndpointDescription(str, Enum):
    START_TASK = (
        'Создаёт новую задачу обработки на основе входного сообщения.\n\n'
        '- Принимает данные пользователя (`tg_id`, `data`, `job_status` и др.)\n'
        '- Генерирует `task_id`\n'
        '- Если статус `job_status` равен `new`, задача регистрируется и ставится в очередь\n'
        '- Если данные некорректны или статус не поддерживается — возвращается ошибка\n\n'
        '**Возможные ответы:**\n'
        '- `200 OK` — задача успешно создана\n'
        '- `502 Bad Gateway` — ошибка в логике обработки или статусе'
    )
    RESULT = (
        'Получить результат выполнения задачи по `task_id`.\n\n'
        'Если задача ещё не завершена — возвращается статус 202 (Accepted).\n'
        'Если задача завершена — возвращается результат в формате `ResultOutPutMessageData`.\n'
        'Если задача не найдена или произошла ошибка — возвращается сообщение об ошибке.\n\n'
        '**Возможные коды ответов:**\n'
        '- `200 OK` — задача завершена, возвращён результат\n'
        '- `202 Accepted` — задача в процессе, результат недоступен\n'
        '- `404 Not Found` — задача с таким `task_id` не найдена\n'
        '- `502 Bad Gateway` — внутренняя ошибка при обработке'
    )


class ResponseMessages(str, Enum):
    TASK_ERROR = 'Ошибка при обработке задачи: {error}'
    INVALID_STATUS = 'Не верный статус задачи, status: {status}'
    TASK_IN_PROGRESS = 'Задача ({task_id}) ещё не завершена, попробуйте позже'
    TASK_FOUND = 'Задача ({task_id}) найдена.'
    TASK_NOT_FOUND = 'Задача ({task_id}) не найдена.'
    RESULT_ERROR = 'Ошибка при обработке запроса результата парсинга: {error}'
