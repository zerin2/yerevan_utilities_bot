"""init

Revision ID: 02e11106ced4
Revises: 
Create Date: 2025-07-08 20:25:46.051602

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '02e11106ced4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('city',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_city_id'), 'city', ['id'], unique=False)
    op.create_index(op.f('ix_city_name'), 'city', ['name'], unique=True)
    op.create_table('end_notice_interval',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_end_notice_interval_id'), 'end_notice_interval', ['id'], unique=False)
    op.create_index(op.f('ix_end_notice_interval_name'), 'end_notice_interval', ['name'], unique=True)
    op.create_table('notice_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notice_type_id'), 'notice_type', ['id'], unique=False)
    op.create_index(op.f('ix_notice_type_name'), 'notice_type', ['name'], unique=True)
    op.create_table('start_notice_interval',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_start_notice_interval_id'), 'start_notice_interval', ['id'], unique=False)
    op.create_index(op.f('ix_start_notice_interval_name'), 'start_notice_interval', ['name'], unique=True)
    op.create_table('status_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_status_type_id'), 'status_type', ['id'], unique=False)
    op.create_index(op.f('ix_status_type_name'), 'status_type', ['name'], unique=True)
    op.create_table('utility_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_utility_type_id'), 'utility_type', ['id'], unique=False)
    op.create_index(op.f('ix_utility_type_name'), 'utility_type', ['name'], unique=True)
    op.create_table('user_profile',
    sa.Column('telegram_id', sa.String(length=50), nullable=False),
    sa.Column('settings', sa.String(length=150), nullable=True),
    sa.Column('is_delivery_blocked', sa.Boolean(), nullable=False),
    sa.Column('delivery_blocked_error', sa.String(length=30), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('notice_state', sa.String(length=10), nullable=False),
    sa.Column('notice_type_id', sa.Integer(), nullable=False),
    sa.Column('start_notice_interval_id', sa.Integer(), nullable=True),
    sa.Column('end_notice_interval_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['end_notice_interval_id'], ['end_notice_interval.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['notice_type_id'], ['notice_type.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['start_notice_interval_id'], ['start_notice_interval.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['status_id'], ['status_type.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_profile_id'), 'user_profile', ['id'], unique=False)
    op.create_index(op.f('ix_user_profile_telegram_id'), 'user_profile', ['telegram_id'], unique=True)
    op.create_table('feedback',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('feedback_type', sa.String(length=60), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_profile.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedback_id'), 'feedback', ['id'], unique=False)
    op.create_index(op.f('ix_feedback_user_id'), 'feedback', ['user_id'], unique=False)
    op.create_table('user_account',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account', sa.String(length=70), nullable=False),
    sa.Column('account_info', sa.String(), nullable=True),
    sa.Column('utility_type_id', sa.Integer(), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(length=150), nullable=True),
    sa.Column('traffic', sa.String(length=100), nullable=True),
    sa.Column('credit', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('debit', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['status_id'], ['status_type.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user_profile.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['utility_type_id'], ['utility_type.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_account_account'), 'user_account', ['account'], unique=False)
    op.create_index(op.f('ix_user_account_id'), 'user_account', ['id'], unique=False)
    op.create_index(op.f('ix_user_account_user_id'), 'user_account', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_account_utility_type_id'), 'user_account', ['utility_type_id'], unique=False)
    op.create_table('user_history',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('message_content', sa.Text(), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_profile.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_history_id'), 'user_history', ['id'], unique=False)
    op.create_index(op.f('ix_user_history_user_id'), 'user_history', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_history_user_id'), table_name='user_history')
    op.drop_index(op.f('ix_user_history_id'), table_name='user_history')
    op.drop_table('user_history')
    op.drop_index(op.f('ix_user_account_utility_type_id'), table_name='user_account')
    op.drop_index(op.f('ix_user_account_user_id'), table_name='user_account')
    op.drop_index(op.f('ix_user_account_id'), table_name='user_account')
    op.drop_index(op.f('ix_user_account_account'), table_name='user_account')
    op.drop_table('user_account')
    op.drop_index(op.f('ix_feedback_user_id'), table_name='feedback')
    op.drop_index(op.f('ix_feedback_id'), table_name='feedback')
    op.drop_table('feedback')
    op.drop_index(op.f('ix_user_profile_telegram_id'), table_name='user_profile')
    op.drop_index(op.f('ix_user_profile_id'), table_name='user_profile')
    op.drop_table('user_profile')
    op.drop_index(op.f('ix_utility_type_name'), table_name='utility_type')
    op.drop_index(op.f('ix_utility_type_id'), table_name='utility_type')
    op.drop_table('utility_type')
    op.drop_index(op.f('ix_status_type_name'), table_name='status_type')
    op.drop_index(op.f('ix_status_type_id'), table_name='status_type')
    op.drop_table('status_type')
    op.drop_index(op.f('ix_start_notice_interval_name'), table_name='start_notice_interval')
    op.drop_index(op.f('ix_start_notice_interval_id'), table_name='start_notice_interval')
    op.drop_table('start_notice_interval')
    op.drop_index(op.f('ix_notice_type_name'), table_name='notice_type')
    op.drop_index(op.f('ix_notice_type_id'), table_name='notice_type')
    op.drop_table('notice_type')
    op.drop_index(op.f('ix_end_notice_interval_name'), table_name='end_notice_interval')
    op.drop_index(op.f('ix_end_notice_interval_id'), table_name='end_notice_interval')
    op.drop_table('end_notice_interval')
    op.drop_index(op.f('ix_city_name'), table_name='city')
    op.drop_index(op.f('ix_city_id'), table_name='city')
    op.drop_table('city')
    # ### end Alembic commands ###
